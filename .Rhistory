mu=dat_sim$y.ur.sim[i],
xi=xi.sim,
phi = phi.sim)))
}
s.ur.sim <- qnorm(z.ur.sim, 0, 1)
dat_sim$s.ur.sim<-s.ur.sim
p_total.sim4<-ggplot(dat_sim, aes(x=s.ur.sim)) +
geom_vline(aes(xintercept=0))+
geom_density(color="red")+labs(title = "Simulation for BSCH(model is wrong)")+
xlim(c(-4,4))+
xlab("")+ylab("")+stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
color="black",
linetype = "dashed")
p.JOB.sim4<-ggplot(dat_sim, aes(x=s.ur.sim, color=JOBCLASS))+
geom_vline(aes(xintercept=0))+
geom_density()+labs(title = "JOBCLASS(model is wrong)")+xlim(c(-4,4))+
xlab("")+ylab("")+stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
color="black",linetype = "dashed")
p_total.sim4
set.seed(3)
dat_blue<-dat_ur_bschm %>% filter(JOBCLASS=="Blue Collar")
dat_sim <-  dat_blue[sample(c(1:nrow(dat_blue)),15000,replace = TRUE),]
alcohol<- sample(c(0,1),15000,replace = TRUE)
b_sim<- 0.3
dat_sim$y.ur.inter<-dat_sim$y.ur.inter*exp(as.numeric(alcohol)*b_sim)
#                                           +(alcohol*dat_sim$AGE)*0.15)
dat_sim$sim_y <- rtweedie(15000, mu = dat_sim$y.ur.inter,
phi = phi.inter,xi=xi.inter)
simmodel<-cpglm(formula = sim_y~KIDSDRIV+CAR_USE+TRAVTIME+
BLUEBOOK+RETAINED+CAR_TYPE+
RED_CAR+REVOLKED+MVR_PTS+AGE+age2+HOMEKIDS+
YOJ+INCOME+GENDER+MARRIED+PARENT1
+MAX_EDUC+HOME_VAL+SAMEHOME, data=dat_sim,
control = list(bound.p=c(1.25,1.35)))
tw.glm.sims<-summary(simmodel)
xi.sim= tw.glm.sims$p
tw_glm.sim <- glm(formula = sim_y~KIDSDRIV+CAR_USE+TRAVTIME+
BLUEBOOK+RETAINED+CAR_TYPE+
RED_CAR+REVOLKED+MVR_PTS+AGE+age2+HOMEKIDS+
YOJ+INCOME+GENDER+MARRIED+PARENT1+
MAX_EDUC+HOME_VAL+SAMEHOME, data=dat_sim,
family = tweedie(var.power=xi.sim, link.power=0),
maxit=5000)
tw_glm.sims<-summary(tw_glm.sim)
phi.sim = tw_glm.sims$dispersion
dat_sim$y.ur.sim<- predict(tw_glm.sim,
newdata = dat_sim,
type = 'response')
z.ur.sim <- rep(0,nrow(dat_sim))
for(i in 1:nrow(dat_sim)){
z.ur.sim[i] = ifelse(dat_sim$sim_y[i]>0,
ptweedie(dat_sim$sim_y[i],
mu=dat_sim$y.ur.sim[i],
xi=xi.sim,
phi = phi.sim),
runif(1, 0, ptweedie(dat_sim$sim_y[i],
mu=dat_sim$y.ur.sim[i],
xi=xi.sim,
phi = phi.sim)))
}
s.ur.sim <- qnorm(z.ur.sim, 0, 1)
dat_sim$s.ur.sim<-s.ur.sim
p_total.sim4<-ggplot(dat_sim, aes(x=s.ur.sim)) +
geom_vline(aes(xintercept=0))+
geom_density(color="red")+labs(title = "Simulation for BSCH(model is wrong)")+
xlim(c(-4,4))+
xlab("")+ylab("")+stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
color="black",
linetype = "dashed")
p.JOB.sim4<-ggplot(dat_sim, aes(x=s.ur.sim, color=JOBCLASS))+
geom_vline(aes(xintercept=0))+
geom_density()+labs(title = "JOBCLASS(model is wrong)")+xlim(c(-4,4))+
xlab("")+ylab("")+stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
color="black",linetype = "dashed")
p_total.sim4
p.JOB.sim4
set.seed(3)
dat_blue<-dat_ur_bschm %>% filter(JOBCLASS=="Blue Collar")
dat_sim <-  dat_blue[sample(c(1:nrow(dat_blue)),15000,replace = TRUE),]
alcohol<- sample(c(0,1),15000,replace = TRUE)
b_sim<- 0.9
dat_sim$y.ur.inter<-dat_sim$y.ur.inter*exp(as.numeric(alcohol)*b_sim)
#                                           +(alcohol*dat_sim$AGE)*0.15)
dat_sim$sim_y <- rtweedie(15000, mu = dat_sim$y.ur.inter,
phi = phi.inter,xi=xi.inter)
simmodel<-cpglm(formula = sim_y~KIDSDRIV+CAR_USE+TRAVTIME+
BLUEBOOK+RETAINED+CAR_TYPE+
RED_CAR+REVOLKED+MVR_PTS+AGE+age2+HOMEKIDS+
YOJ+INCOME+GENDER+MARRIED+PARENT1
+MAX_EDUC+HOME_VAL+SAMEHOME, data=dat_sim,
control = list(bound.p=c(1.25,1.35)))
tw.glm.sims<-summary(simmodel)
xi.sim= tw.glm.sims$p
tw_glm.sim <- glm(formula = sim_y~KIDSDRIV+CAR_USE+TRAVTIME+
BLUEBOOK+RETAINED+CAR_TYPE+
RED_CAR+REVOLKED+MVR_PTS+AGE+age2+HOMEKIDS+
YOJ+INCOME+GENDER+MARRIED+PARENT1+
MAX_EDUC+HOME_VAL+SAMEHOME, data=dat_sim,
family = tweedie(var.power=xi.sim, link.power=0),
maxit=5000)
tw_glm.sims<-summary(tw_glm.sim)
phi.sim = tw_glm.sims$dispersion
dat_sim$y.ur.sim<- predict(tw_glm.sim,
newdata = dat_sim,
type = 'response')
z.ur.sim <- rep(0,nrow(dat_sim))
for(i in 1:nrow(dat_sim)){
z.ur.sim[i] = ifelse(dat_sim$sim_y[i]>0,
ptweedie(dat_sim$sim_y[i],
mu=dat_sim$y.ur.sim[i],
xi=xi.sim,
phi = phi.sim),
runif(1, 0, ptweedie(dat_sim$sim_y[i],
mu=dat_sim$y.ur.sim[i],
xi=xi.sim,
phi = phi.sim)))
}
s.ur.sim <- qnorm(z.ur.sim, 0, 1)
dat_sim$s.ur.sim<-s.ur.sim
p_total.sim4<-ggplot(dat_sim, aes(x=s.ur.sim)) +
geom_vline(aes(xintercept=0))+
geom_density(color="red")+labs(title = "Simulation for BSCH(model is wrong)")+
xlim(c(-4,4))+
xlab("")+ylab("")+stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
color="black",
linetype = "dashed")
p.JOB.sim4<-ggplot(dat_sim, aes(x=s.ur.sim, color=JOBCLASS))+
geom_vline(aes(xintercept=0))+
geom_density()+labs(title = "JOBCLASS(model is wrong)")+xlim(c(-4,4))+
xlab("")+ylab("")+stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
color="black",linetype = "dashed")
p_total.sim4
alcohol<- runif(15000,0,1)
#sample(c(0,1),15000,replace = TRUE)
b_sim<- 0.9
dat_sim$y.ur.inter<-dat_sim$y.ur.inter*exp(as.numeric(alcohol)*b_sim)
dat_sim$sim_y <- rtweedie(15000, mu = dat_sim$y.ur.inter,
phi = phi.inter,xi=xi.inter)
simmodel<-cpglm(formula = sim_y~KIDSDRIV+CAR_USE+TRAVTIME+
BLUEBOOK+RETAINED+CAR_TYPE+
RED_CAR+REVOLKED+MVR_PTS+AGE+age2+HOMEKIDS+
YOJ+INCOME+GENDER+MARRIED+PARENT1
+MAX_EDUC+HOME_VAL+SAMEHOME, data=dat_sim,
control = list(bound.p=c(1.25,1.35)))
tw.glm.sims<-summary(simmodel)
xi.sim= tw.glm.sims$p
tw_glm.sim <- glm(formula = sim_y~KIDSDRIV+CAR_USE+TRAVTIME+
BLUEBOOK+RETAINED+CAR_TYPE+
RED_CAR+REVOLKED+MVR_PTS+AGE+age2+HOMEKIDS+
YOJ+INCOME+GENDER+MARRIED+PARENT1+
MAX_EDUC+HOME_VAL+SAMEHOME, data=dat_sim,
family = tweedie(var.power=xi.sim, link.power=0),
maxit=5000)
tw_glm.sims<-summary(tw_glm.sim)
phi.sim = tw_glm.sims$dispersion
dat_sim$y.ur.sim<- predict(tw_glm.sim,
newdata = dat_sim,
type = 'response')
z.ur.sim <- rep(0,nrow(dat_sim))
for(i in 1:nrow(dat_sim)){
z.ur.sim[i] = ifelse(dat_sim$sim_y[i]>0,
ptweedie(dat_sim$sim_y[i],
mu=dat_sim$y.ur.sim[i],
xi=xi.sim,
phi = phi.sim),
runif(1, 0, ptweedie(dat_sim$sim_y[i],
mu=dat_sim$y.ur.sim[i],
xi=xi.sim,
phi = phi.sim)))
}
s.ur.sim <- qnorm(z.ur.sim, 0, 1)
dat_sim$s.ur.sim<-s.ur.sim
p_total.sim4<-ggplot(dat_sim, aes(x=s.ur.sim)) +
geom_vline(aes(xintercept=0))+
geom_density(color="red")+labs(title = "Simulation for BSCH(model is wrong)")+
xlim(c(-4,4))+
xlab("")+ylab("")+stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
color="black",
linetype = "dashed")
p.JOB.sim4<-ggplot(dat_sim, aes(x=s.ur.sim, color=JOBCLASS))+
geom_vline(aes(xintercept=0))+
geom_density()+labs(title = "JOBCLASS(model is wrong)")+xlim(c(-4,4))+
xlab("")+ylab("")+stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
color="black",linetype = "dashed")
p_total.sim4
exp(as.numeric(alcohol)*b_sim)
set.seed(3)
library(VGAM)
library(pscl)
library(ggpointdensity)
library(MASS)
library(tweedie)
library(statmod)
library(cplm)
library(tidyverse)
library(gridExtra)
data("AutoClaim")
dat<-cplm::AutoClaim
dat<-na.omit(dat)
dat$KIDSDRIV <- as.numeric(dat$KIDSDRIV)# the number of driving children
dat$TRAVTIME <- as.numeric(dat$TRAVTIME)# the distance to work
dat$CAR_USE <- relevel(dat$CAR_USE, ref = 'Private')# the primaryuse of the vehicle
dat$BLUEBOOK <- as.numeric(dat$BLUEBOOK)# the value of the vehicle
dat$RETAINED <- as.numeric(dat$RETAINED)# the number of years as a customer
dat$CAR_TYPE <- relevel(dat$CAR_TYPE, ref = 'Sedan') # CAR_TYPE
dat$RED_CAR <- relevel(dat$RED_CAR, ref ='no')#  whether the color of the car is red
dat$CLM_FLAG_fre<-ifelse(dat$CLM_FLAG=="Yes",1,0)
dat$REVOLKED <- relevel(dat$REVOLKED, ref='No')# whether the dirver's license was invoked in the past 7 years
dat$MVR_PTS <- as.numeric(dat$MVR_PTS)
dat$AGE <- as.numeric(dat$AGE)#  the age of the driver
dat$HOMEKIDS <- as.numeric(dat$HOMEKIDS)# the number of children
dat$YOJ <- as.numeric(dat$YOJ)# years at current job
dat$INCOME <- as.numeric(dat$INCOME)# annual income
dat$GENDER <- relevel(dat$GENDER, ref='F')# the gender of the driver
dat$MARRIED <- relevel(dat$MARRIED, ref = 'Yes')# married or not
dat$PARENT1 <- relevel(dat$PARENT1, ref = 'No')# single parent
dat$JOBCLASS <- relevel(dat$JOBCLASS, ref='Blue Collar')
dat$MAX_EDUC <- relevel(dat$MAX_EDUC, ref='High School')
dat$HOME_VAL <- as.numeric(dat$HOME_VAL)#  the value of the insured's home
dat$AREA<- relevel(dat$AREA,ref='Urban')# home/work area
dat$SAMEHOME<-as.numeric(dat$SAMEHOME)
dat_urban<-dat %>% filter(AREA=="Urban")
dat_rural<-dat %>% filter(AREA=="Rural")
dat_ur_bschm<-dat_urban %>%
filter(JOBCLASS=="Blue Collar" | JOBCLASS=="Student" | JOBCLASS=="Clerical" | JOBCLASS=="Home Maker") %>%
mutate(age2=AGE^2)
dat_ur_nonbschm<-dat_urban %>%
filter(JOBCLASS!="Blue Collar" & JOBCLASS!="Student" & JOBCLASS!="Clerical" & JOBCLASS !="Home Maker")
dat_ur_bschm %>% filter(JOBCLASS=="Student" & MARRIED=="YES")
f_new_inter<-as.formula("CLM_AMT~KIDSDRIV+CAR_USE+TRAVTIME+
BLUEBOOK+RETAINED+CAR_TYPE+
RED_CAR+REVOLKED+MVR_PTS+AGE+age2+HOMEKIDS+
YOJ+INCOME+GENDER+MARRIED+PARENT1+
JOBCLASS+MAX_EDUC+HOME_VAL+SAMEHOME")
tw.glm.inter <- cpglm(formula = f_new_inter, data=dat_ur_bschm,
control = list(bound.p=c(1.25,1.35)))
tw.glm.inters<-summary(tw.glm.inter)
xi.inter= tw.glm.inters$p
tw_glm.inter <- glm(formula = f_new_inter, data=dat_ur_bschm,
family = tweedie(var.power=xi.inter, link.power=0),
maxit=5000)
tw_glm.inters<-summary(tw_glm.inter)
phi.inter = tw_glm.inters$dispersion
hmcoff<-round(tw_glm.inters$coefficients,2)
dat_ur_bschm$y.ur.inter<- predict(tw_glm.inter,
newdata = dat_ur_bschm,
type = 'response')
z.ur.inter <- rep(0,nrow(dat_ur_bschm))
for(i in 1:nrow(dat_ur_bschm)){
z.ur.inter[i] = ifelse(dat_ur_bschm$CLM_AMT[i]>0,
ptweedie(dat_ur_bschm$CLM_AMT[i],
mu=dat_ur_bschm$y.ur.inter[i],
xi=xi.inter,
phi = phi.inter),
runif(1, 0, ptweedie(dat_ur_bschm$CLM_AMT[i],
mu=dat_ur_bschm$y.ur.inter[i],
xi=xi.inter,
phi = phi.inter)))
}
s.ur.inter <- qnorm(z.ur.inter, 0, 1)
dat_ur_bschm$s.ur.inter<-s.ur.inter
p_total.inter4<-ggplot(dat_ur_bschm, aes(x=s.ur.inter)) +
geom_vline(aes(xintercept=0))+
geom_density(color="red")+labs(title = "Interaction term")+
ylim(c(0,0.65))+xlim(c(-4,4))+
xlab("")+ylab("")+stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
color="black",
linetype = "dashed")
set.seed(3)
dat_blue<-dat_ur_bschm %>% filter(JOBCLASS=="Blue Collar")
dat_sim <-  dat_blue[sample(c(1:nrow(dat_blue)),15000,replace = TRUE),]
alcohol<- runif(15000,0,1)
#sample(c(0,1),15000,replace = TRUE)
b_sim<- 0.9
dat_sim$y.ur.inter<-dat_sim$y.ur.inter*exp(as.numeric(alcohol)*b_sim)
dat_sim$sim_y <- rtweedie(15000, mu = dat_sim$y.ur.inter,
phi = phi.inter,xi=xi.inter)
simmodel<-cpglm(formula = sim_y~KIDSDRIV+CAR_USE+TRAVTIME+
BLUEBOOK+RETAINED+CAR_TYPE+
RED_CAR+REVOLKED+MVR_PTS+AGE+age2+HOMEKIDS+
YOJ+INCOME+GENDER+MARRIED+PARENT1
+MAX_EDUC+HOME_VAL+SAMEHOME, data=dat_sim,
control = list(bound.p=c(1.25,1.35)))
tw.glm.sims<-summary(simmodel)
xi.sim= tw.glm.sims$p
tw_glm.sim <- glm(formula = sim_y~KIDSDRIV+CAR_USE+TRAVTIME+
BLUEBOOK+RETAINED+CAR_TYPE+
RED_CAR+REVOLKED+MVR_PTS+AGE+age2+HOMEKIDS+
YOJ+INCOME+GENDER+MARRIED+PARENT1+
MAX_EDUC+HOME_VAL+SAMEHOME, data=dat_sim,
family = tweedie(var.power=xi.sim, link.power=0),
maxit=5000)
tw_glm.sims<-summary(tw_glm.sim)
phi.sim = tw_glm.sims$dispersion
dat_sim$y.ur.sim<- predict(tw_glm.sim,
newdata = dat_sim,
type = 'response')
z.ur.sim <- rep(0,nrow(dat_sim))
for(i in 1:nrow(dat_sim)){
z.ur.sim[i] = ifelse(dat_sim$sim_y[i]>0,
ptweedie(dat_sim$sim_y[i],
mu=dat_sim$y.ur.sim[i],
xi=xi.sim,
phi = phi.sim),
runif(1, 0, ptweedie(dat_sim$sim_y[i],
mu=dat_sim$y.ur.sim[i],
xi=xi.sim,
phi = phi.sim)))
}
s.ur.sim <- qnorm(z.ur.sim, 0, 1)
dat_sim$s.ur.sim<-s.ur.sim
p_total.sim4<-ggplot(dat_sim, aes(x=s.ur.sim)) +
geom_vline(aes(xintercept=0))+
geom_density(color="red")+labs(title = "Simulation for BSCH(model is wrong)")+
xlim(c(-4,4))+
xlab("")+ylab("")+stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
color="black",
linetype = "dashed")
p.JOB.sim4<-ggplot(dat_sim, aes(x=s.ur.sim, color=JOBCLASS))+
geom_vline(aes(xintercept=0))+
geom_density()+labs(title = "JOBCLASS(model is wrong)")+xlim(c(-4,4))+
xlab("")+ylab("")+stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
color="black",linetype = "dashed")
p_total.sim4
set.seed(3)
dat_blue<-dat_ur_bschm %>% filter(JOBCLASS=="Blue Collar")
dat_sim <-  dat_blue[sample(c(1:nrow(dat_blue)),15000,replace = TRUE),]
alcohol<- runif(15000,0,1)
#sample(c(0,1),15000,replace = TRUE)
b_sim<- 0.9
dat_sim$y.ur.inter<-dat_sim$y.ur.inter*exp(as.numeric(alcohol)*b_sim)
#                                           +(alcohol*dat_sim$AGE)*0.15)
dat_sim$sim_y <- rtweedie(15000, mu = dat_sim$y.ur.inter,
phi = phi.inter,xi=xi.inter)
simmodel<-cpglm(formula = sim_y~KIDSDRIV+CAR_USE+TRAVTIME+
BLUEBOOK+RETAINED+CAR_TYPE+
RED_CAR+REVOLKED+MVR_PTS+AGE+age2+HOMEKIDS+
YOJ+INCOME+GENDER+MARRIED+PARENT1
+MAX_EDUC+HOME_VAL+SAMEHOME, data=dat_sim,
control = list(bound.p=c(1.25,1.35)))
tw.glm.sims<-summary(simmodel)
xi.sim= tw.glm.sims$p
tw_glm.sim <- glm(formula = sim_y~KIDSDRIV+CAR_USE+TRAVTIME+
BLUEBOOK+RETAINED+CAR_TYPE+
RED_CAR+REVOLKED+MVR_PTS+AGE+age2+HOMEKIDS+
YOJ+INCOME+GENDER+MARRIED+PARENT1+
MAX_EDUC+HOME_VAL+SAMEHOME, data=dat_sim,
family = tweedie(var.power=xi.sim, link.power=0),
maxit=5000)
tw_glm.sims<-summary(tw_glm.sim)
phi.sim = tw_glm.sims$dispersion
dat_sim$y.ur.sim<- predict(tw_glm.sim,
newdata = dat_sim,
type = 'response')
z.ur.sim <- rep(0,nrow(dat_sim))
for(i in 1:nrow(dat_sim)){
z.ur.sim[i] = ifelse(dat_sim$sim_y[i]>0,
ptweedie(dat_sim$sim_y[i],
mu=dat_sim$y.ur.sim[i],
xi=xi.sim,
phi = phi.sim),
runif(1, 0, ptweedie(dat_sim$sim_y[i],
mu=dat_sim$y.ur.sim[i],
xi=xi.sim,
phi = phi.sim)))
}
s.ur.sim <- qnorm(z.ur.sim, 0, 1)
dat_sim$s.ur.sim<-s.ur.sim
p_total.sim4<-ggplot(dat_sim, aes(x=s.ur.sim)) +
geom_vline(aes(xintercept=0))+
geom_density(color="red")+labs(title = "Simulation for BSCH(model is wrong)")+
xlim(c(-4,4))+
xlab("")+ylab("")+stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
color="black",
linetype = "dashed")
p.JOB.sim4<-ggplot(dat_sim, aes(x=s.ur.sim, color=JOBCLASS))+
geom_vline(aes(xintercept=0))+
geom_density()+labs(title = "JOBCLASS(model is wrong)")+xlim(c(-4,4))+
xlab("")+ylab("")+stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
color="black",linetype = "dashed")
p_total.sim4
exp(as.numeric(alcohol)*b_sim)
set.seed(3)
dat_blue<-dat_ur_bschm %>% filter(JOBCLASS=="Blue Collar")
dat_sim <-  dat_blue[sample(c(1:nrow(dat_blue)),15000,replace = TRUE),]
alcohol<- runif(15000,0,2)
#sample(c(0,1),15000,replace = TRUE)
b_sim<- 0.9
dat_sim$y.ur.inter<-dat_sim$y.ur.inter*exp(as.numeric(alcohol)*b_sim)
#                                           +(alcohol*dat_sim$AGE)*0.15)
dat_sim$sim_y <- rtweedie(15000, mu = dat_sim$y.ur.inter,
phi = phi.inter,xi=xi.inter)
simmodel<-cpglm(formula = sim_y~KIDSDRIV+CAR_USE+TRAVTIME+
BLUEBOOK+RETAINED+CAR_TYPE+
RED_CAR+REVOLKED+MVR_PTS+AGE+age2+HOMEKIDS+
YOJ+INCOME+GENDER+MARRIED+PARENT1
+MAX_EDUC+HOME_VAL+SAMEHOME, data=dat_sim,
control = list(bound.p=c(1.25,1.35)))
tw.glm.sims<-summary(simmodel)
xi.sim= tw.glm.sims$p
tw_glm.sim <- glm(formula = sim_y~KIDSDRIV+CAR_USE+TRAVTIME+
BLUEBOOK+RETAINED+CAR_TYPE+
RED_CAR+REVOLKED+MVR_PTS+AGE+age2+HOMEKIDS+
YOJ+INCOME+GENDER+MARRIED+PARENT1+
MAX_EDUC+HOME_VAL+SAMEHOME, data=dat_sim,
family = tweedie(var.power=xi.sim, link.power=0),
maxit=5000)
tw_glm.sims<-summary(tw_glm.sim)
phi.sim = tw_glm.sims$dispersion
dat_sim$y.ur.sim<- predict(tw_glm.sim,
newdata = dat_sim,
type = 'response')
z.ur.sim <- rep(0,nrow(dat_sim))
for(i in 1:nrow(dat_sim)){
z.ur.sim[i] = ifelse(dat_sim$sim_y[i]>0,
ptweedie(dat_sim$sim_y[i],
mu=dat_sim$y.ur.sim[i],
xi=xi.sim,
phi = phi.sim),
runif(1, 0, ptweedie(dat_sim$sim_y[i],
mu=dat_sim$y.ur.sim[i],
xi=xi.sim,
phi = phi.sim)))
}
s.ur.sim <- qnorm(z.ur.sim, 0, 1)
dat_sim$s.ur.sim<-s.ur.sim
p_total.sim4<-ggplot(dat_sim, aes(x=s.ur.sim)) +
geom_vline(aes(xintercept=0))+
geom_density(color="red")+labs(title = "Simulation for BSCH(model is wrong)")+
xlim(c(-4,4))+
xlab("")+ylab("")+stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
color="black",
linetype = "dashed")
p.JOB.sim4<-ggplot(dat_sim, aes(x=s.ur.sim, color=JOBCLASS))+
geom_vline(aes(xintercept=0))+
geom_density()+labs(title = "JOBCLASS(model is wrong)")+xlim(c(-4,4))+
xlab("")+ylab("")+stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
color="black",linetype = "dashed")
p_total.sim4
set.seed(3)
dat_blue<-dat_ur_bschm %>% filter(JOBCLASS=="Blue Collar")
dat_sim <-  dat_blue[sample(c(1:nrow(dat_blue)),15000,replace = TRUE),]
alcohol<- runif(15000,0,2)
#sample(c(0,1),15000,replace = TRUE)
b_sim<- 0.9
dat_sim$y.ur.inter<-dat_sim$y.ur.inter*exp(as.numeric(alcohol)*b_sim)
dat_sim$sim_y <- rtweedie(15000, mu = dat_sim$y.ur.inter,
phi = phi.inter,xi=xi.inter)
simmodel<-cpglm(formula = sim_y~KIDSDRIV+CAR_USE+TRAVTIME+
BLUEBOOK+RETAINED+CAR_TYPE+
RED_CAR+REVOLKED+MVR_PTS+AGE+age2+HOMEKIDS+
YOJ+INCOME+GENDER+MARRIED+PARENT1
+MAX_EDUC+HOME_VAL+SAMEHOME, data=dat_sim,
control = list(bound.p=c(1.25,1.35)))
tw.glm.sims<-summary(simmodel)
xi.sim= tw.glm.sims$p
tw_glm.sim <- glm(formula = sim_y~KIDSDRIV+CAR_USE+TRAVTIME+
BLUEBOOK+RETAINED+CAR_TYPE+
RED_CAR+REVOLKED+MVR_PTS+AGE+age2+HOMEKIDS+
YOJ+INCOME+GENDER+MARRIED+PARENT1+
MAX_EDUC+HOME_VAL+SAMEHOME, data=dat_sim,
family = tweedie(var.power=xi.sim, link.power=0),
maxit=5000)
tw_glm.sims<-summary(tw_glm.sim)
phi.sim = tw_glm.sims$dispersion
dat_sim$y.ur.sim<- predict(tw_glm.sim,
newdata = dat_sim,
type = 'response')
z.ur.sim <- rep(0,nrow(dat_sim))
for(i in 1:nrow(dat_sim)){
z.ur.sim[i] = ifelse(dat_sim$sim_y[i]>0,
ptweedie(dat_sim$sim_y[i],
mu=dat_sim$y.ur.sim[i],
xi=xi.sim,
phi = phi.sim),
runif(1, 0, ptweedie(dat_sim$sim_y[i],
mu=dat_sim$y.ur.sim[i],
xi=xi.sim,
phi = phi.sim)))
}
s.ur.sim <- qnorm(z.ur.sim, 0, 1)
dat_sim$s.ur.sim<-s.ur.sim
p_total.sim4<-ggplot(dat_sim, aes(x=s.ur.sim)) +
geom_vline(aes(xintercept=0))+
geom_density(color="red")+labs(title = "Simulation for BSCH(model is wrong)")+
xlim(c(-4,4))+
xlab("")+ylab("")+stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
color="black",
linetype = "dashed")
p.JOB.sim4<-ggplot(dat_sim, aes(x=s.ur.sim, color=JOBCLASS))+
geom_vline(aes(xintercept=0))+
geom_density()+labs(title = "JOBCLASS(model is wrong)")+xlim(c(-4,4))+
xlab("")+ylab("")+stat_function(fun = dnorm,
args = list(mean = 0, sd = 1),
color="black",linetype = "dashed")
p_total.sim4
